// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store_Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profit Float @default(0)
  salePrice Float 
  company String
  totalStock Float @default(0)
  stockUnit String
  itemName String
  noOfSoldUnit Float @default(0)
  totalStockCost Float @default(0)
  avgRatePerUnit Float @default(0)
  product_SKU String @unique
  correctInformation Boolean?
  totalSoldItemsPrice Float @default(0)
  soldAvgPerUnitPrice Float @default(0)
  bike_rikshawName String

  @@unique([itemName, company, bike_rikshawName])
}

model Shop_Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  profit Float @default(0)
  salePrice Float 
  company String
  totalStock Float @default(0)
  stockUnit String
  itemName String
  noOfSoldUnit Float @default(0)
  totalStockCost Float @default(0)
  avgRatePerUnit Float @default(0)
  product_SKU String @unique
  correctInformation Boolean?
  totalSoldItemsPrice Float @default(0)
  soldAvgPerUnitPrice Float @default(0)
  bike_rikshawName String

  @@unique([itemName, company, bike_rikshawName])
}

model Sale {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  totalSaleBill Int
  inStore Boolean?
  products SaleProduct[]
  profit Float
}

type SaleProduct {
  profit Int
  product_SKU String
  totalSalePrice Int
  noOfUnitsToSale Int
  soldPricePerUnit Int
}

model Purchase {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  totalPurchaseBill Int
  inStore Boolean?
  products PurchaseProduct[]
}

type PurchaseProduct {
  product_SKU String
  perUnitPrice Int
  totalPurchaseBill Int
  noOfPurchasedUnit Int
}

enum ActionType {
  editing
  sale_shop
  purchase_shop
  sale_store
  purchase_store
  storeTransfer
  shopTransfer
  sale_delete
  purchase_delete
}

model History {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  price Float
  numOfUnits Float
  saleId String?
  inShop Boolean?
  purchaseId String?
  soldAt DateTime?
  editedFields Json?
  actionType ActionType
  product_sku String  
  createdAt DateTime @default(now())
}